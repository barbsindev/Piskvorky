{"version":3,"sources":["Game.tsx"],"names":[],"mappings":"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","file":"Game.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {StyleSheet, View, Button, Alert} from 'react-native';\nimport {FontAwesomeIcon} from '@fortawesome/react-native-fontawesome';\nimport {faComment} from '@fortawesome/free-solid-svg-icons';\nimport Circle from './Circle';\nimport Cross from './Cross';\nimport Chat from './Chat/Chat';\nimport Wrapper from '../components/Wrapper';\nimport {\n  ScrollView,\n  TouchableWithoutFeedback,\n} from 'react-native-gesture-handler';\n\nconst winningPattern = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\nlet currentPlayer = {Cross};\n\nfunction containsAny(source, target) {\n  var result = source.filter(function (item) {\n    return target.indexOf(item) > -1;\n  });\n  return result.length > 0;\n}\n\nexport default function Game({route, id}) {\n  const [clickedBoxes, setClickedBoxes] = useState([]);\n\n  useEffect(() => {\n    // log if you have 3 or more clicked boxes\n    console.log(winningPattern[0], clickedBoxes);\n\n    // checks weather our clicked boxes array Contains ANY of the winning patterns\n    // eg if we have created a winning poattern on the game board\n    let checker = (arr, target) => target.every(v => arr.includes(v));\n    // if ( true) {\n    //   Alert.alert('Alert Title', 'My Alert Msg');\n    // }\n    // loops through EACH element in our winning pattern array one by one\n    // eg [0,1,2], [0,3,6]\n    // if our clicked boxes arr has any of the winning pattens we get a TRUE else a FALSE\n    winningPattern.forEach((element, index) => {\n      // inedex is the number of the array item we are looping though -- starts at 0, ends at 8\n      console.log(element, 'frr');\n      console.log(checker(clickedBoxes, winningPattern[index]));\n      if (checker(clickedBoxes, winningPattern[index]) === true) {\n        Alert.alert('Game Over!', 'You Won!');\n      }\n      console.log('checker func called');\n    });\n\n    // winningPattern.every((item) => {\n    //   console.log(item, 'i');\n    //   if (item.includes(clickedBoxes)) {\n    //     console.log('yay');\n    //   }\n    // });\n    if (clickedBoxes.length >= 3) {\n      console.log('array');\n    }\n\n    // check wehther your clickedboxes array contains ALL 3 numbers in winningPattern[0],[1],[2]ect\n    // if your arr does u WIN\n    // if your arr doesnt you are yet to win\n    // you will need some kind of loop - to loop though winningPattern[0],[1]etc and check agaist your array\n    console.log(clickedBoxes);\n  }, [clickedBoxes]);\n\n  const handleEvent = index => {\n    if (clickedBoxes.includes(index)) {\n      // do nothing, we dont want to add a number that already esists in  the array to the array again\n      return;\n    } else {\n      // the index/boxnumber isnt already in the array so we want to add to array\n      setClickedBoxes(clickedBoxes => [...clickedBoxes, index]);\n    }\n  };\n  function handlePlayerChange() {\n    currentPlayer = currentPlayer === {Cross} ? {Circle} : {Cross};\n  }\n  const filledArray = new Array(9).fill(null).map((box, index) => (\n    <TouchableWithoutFeedback onPress={() => handleEvent(index)}>\n      <View style={styles.box} key={box}>\n        {clickedBoxes.includes(index) && <Cross />}\n      </View>\n    </TouchableWithoutFeedback>\n  ));\n\n  // console.log(filledArray);\n\n  return (\n    <ScrollView>\n      <Wrapper flex={1}>\n        {/* <Box /> */}\n        <View style={styles.flex}>{filledArray}</View>\n        {/* <FontAwesomeIcon icon={faComment} size={70} style={styles.icon} />\n        <Chat boxClicked={'a3'} /> */}\n      </Wrapper>\n      <Button title=\"Reset\" onPress={() => setClickedBoxes([])}></Button>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  box: {\n    width: 100,\n    height: 100,\n    borderWidth: 1,\n    borderColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  player: {\n    padding: 20,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  icon: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    color: '#27bdac',\n  },\n});\n"]}